
&НаКлиенте
Процедура ЗапроситьОстаткиРЦНаСервере()
	
	ВремяНачала = ТекущаяДата();
	
	Если НЕ ЭтоРаспределительныйЦентр() Тогда
		Возврат;
	КонецЕсли;
	
	ИмяПользователя = "кгд_СалдинЕ_1С";
	Пароль = "245368";
	//ИмяПользователя = "ObmenRIB";
	//Пароль = "1478963";
	
	СтрокаАвторизации = ПолучитьBase64СтрокуИзДвоичныхДанных(ПолучитьДвоичныеДанныеИзСтроки(ИмяПользователя + ":" + Пароль, КодировкаТекста.UTF8, Ложь));
	
	
	//1. создаем HTTP-соединение
	HTTP = Новый HTTPСоединение("127.0.0.1", 80, ИмяПользователя, Пароль,,,,Ложь);

	//2. создаем соответствие ЗаголовокЗапросаHTTP и заполняем заголовки
	Заголовки = Новый Соответствие();
	//Заголовки.Вставить("User-Agent", "1C+Enterprise/8.3");
	Заголовки.Вставить("Content-type", "application/JSON;  charset=utf-8");
	//Заголовки.Вставить("Authorization", "Basic "+СтрокаАвторизации);
	
	//3. создаем HTTP-запрос
	HTTPЗапрос = Новый HTTPЗапрос("/check/hs/logisticcheck/getremains/" + КодРО(), Заголовки);
	
	//4. отправляем HTTP-запрос
	//Ответ = HTTP.Получить(HTTPЗапрос);
	Ответ = HTTP.ВызватьHTTPМетод("GET", HTTPЗапрос);
	
	//5. обрабатывает ответ на запрос
	Если Ответ.КодСостояния = 200 Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		
		Данные = ПрочитатьJSON(ЧтениеJSON, Ложь);
		ОбработатьДанныеОстатков(Данные);
		
		ВремяОкончания = ТекущаяДата();
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данные получены. Статус-код " + Ответ.КодСостояния);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Время выполнения: " + (ВремяОкончания - ВремяНачала) / 60 + " мин.");
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Соединение отсутствует. Статус-код " + Ответ.КодСостояния);
	КонецЕсли;
	
	Соединение = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеОстатков(Данные)

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(20)));
	
	Для каждого Элм Из Данные Цикл
		
		нСтр = Таблица.Добавить();
		нСтр.Количество = Число(Элм.Num);
		
		СтрокаДата = СтрЗаменить(Лев(Элм.Date, 10), "-", "");
		нСтр.Дата = Формат(СтрокаДата, "ДЛФ=ДДВ");
		
		нСтр.Код = Элм.Code;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.Код КАК Код,
		|	Таблица.Дата КАК Дата,
		|	Таблица.Количество КАК Количество
		|ПОМЕСТИТЬ втДанные
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанные.Код КАК Код,
		|	втДанные.Дата КАК Дата,
		|	втДанные.Количество КАК Количество,
		|	Номенклатура.Ссылка КАК Номенклатура
		|ПОМЕСТИТЬ втПолученыйРС
		|ИЗ
		|	втДанные КАК втДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО втДанные.Код = Номенклатура.Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втПолученыйРС.Код КАК Код,
		|	втПолученыйРС.Дата КАК Дата,
		|	втПолученыйРС.Количество КАК Количество,
		|	втПолученыйРС.Номенклатура КАК Номенклатура,
		|	ДоступныеОстаткиВРРО.Номенклатура КАК Номенклатура1,
		|	ДоступныеОстаткиВРРО.ДатаОстатков КАК ДатаОстатков,
		|	ДоступныеОстаткиВРРО.Количество КАК Количество1
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	втПолученыйРС КАК втПолученыйРС
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиВРРО КАК ДоступныеОстаткиВРРО
		|		ПО втПолученыйРС.Номенклатура = ДоступныеОстаткиВРРО.Номенклатура
		|			И втПолученыйРС.Дата = ДоступныеОстаткиВРРО.ДатаОстатков
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Код КАК Код,
		|	вт.Дата КАК Дата,
		|	вт.Количество КАК Количество,
		|	вт.Номенклатура КАК Номенклатура,
		|	вт.Номенклатура1 КАК Номенклатура1,
		|	вт.ДатаОстатков КАК ДатаОстатков,
		|	вт.Количество1 КАК Количество1,
		|	вт.Номенклатура.Представление КАК НоменклатураПредставление,
		|	вт.Номенклатура1.Представление КАК Номенклатура1Представление
		|ИЗ
		|	вт КАК вт
		|ГДЕ
		|	(вт.Номенклатура <> вт.Номенклатура1
		|			ИЛИ вт.Дата <> вт.ДатаОстатков
		|			ИЛИ вт.Количество <> вт.Количество1)";
	
	Запрос.УстановитьПараметр("Таблица", Таблица);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не совпадает: " + ВыборкаДетальныеЗаписи.НоменклатураПредставление + "<>" + ВыборкаДетальныеЗаписи.НоменклатураПредставление;
		Сообщение.Сообщить();
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Функция КодРО()

	Возврат Справочники.РегиональныеОтделения.ВозвратСсылкиНаПервыйЭлементРО().КонтрагентРО.Код;

КонецФункции

&НаСервере
Функция ЭтоРаспределительныйЦентр()

	Возврат Константы.ЭтоРаспределительныйЦентр.Получить();

КонецФункции

&НаКлиенте
Процедура ЗапроситьОстаткиРЦ(Команда)
	ЗапроситьОстаткиРЦНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьХэш()

	Возврат "";

КонецФункции 

&НаСервере
Процедура ОтправитьДляСравненияНаСервере()
	
	Если Не Константы.ЭтоРаспределительныйЦентр.Получить() Тогда
		//Возврат;
	КонецЕсли;
	
	ИмяПользователя = "кгд_СалдинЕ_1С";
	Пароль = "245368";
	
	СтрокаАвторизации = ПолучитьBase64СтрокуИзДвоичныхДанных(ПолучитьДвоичныеДанныеИзСтроки(ИмяПользователя + ":" + Пароль, КодировкаТекста.UTF8, Ложь));
	
	SSL = Новый ЗащищенноеСоединениеOpenSSL;
	
	телоЗапроса = ПолучитьХэш();
	
	
	//Соединение = Новый HTTPСоединение("localhost", 80,,,,,, Истина);
	Соединение = Новый HTTPСоединение("localhost",80,,,,,);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Length:", СтрДлина(телоЗапроса));
	Заголовки.Вставить("Content-type", "application/JSON;  charset=utf-8");
	Заголовки.Вставить("Authorization", "Basic "+СтрокаАвторизации);
	Запрос = Новый HTTPЗапрос("http://localhost/logistic/hs/remainscheck/postremains/", Заголовки);
	
	
	
	Запрос.УстановитьТелоИзСтроки(телоЗапроса, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

	результат = Соединение.ОтправитьДляОбработки(Запрос);
	
	Ответ = Результат.ПолучитьТелоКакСтроку();
	
	Сообщить(результат.КодСостояния);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьДляСравнения(Команда)
	ОтправитьДляСравненияНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ЗапроситьРезервНаСервере()
	
	ВремяНачала = ТекущаяДата();
	
	Если НЕ ЭтоРаспределительныйЦентр() Тогда
		Возврат;
	КонецЕсли;
	
	ИмяПользователя = "кгд_СалдинЕ_1С";
	Пароль = "245368";
	//ИмяПользователя = "ObmenRIB";
	//Пароль = "1478963";
	
	СтрокаАвторизации = ПолучитьBase64СтрокуИзДвоичныхДанных(ПолучитьДвоичныеДанныеИзСтроки(ИмяПользователя + ":" + Пароль, КодировкаТекста.UTF8, Ложь));
	
	
	//1. создаем HTTP-соединение
	HTTP = Новый HTTPСоединение("127.0.0.1", 80, ИмяПользователя, Пароль,,,,Ложь);

	//2. создаем соответствие ЗаголовокЗапросаHTTP и заполняем заголовки
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-type", "application/JSON;  charset=utf-8");
	
	//3. создаем HTTP-запрос
	HTTPЗапрос = Новый HTTPЗапрос("/check/hs/logisticcheck/getreserve/" + КодРО(), Заголовки);
	
	//4. отправляем HTTP-запрос
	//Ответ = HTTP.Получить(HTTPЗапрос);
	Ответ = HTTP.ВызватьHTTPМетод("GET", HTTPЗапрос);
	
	//5. обрабатывает ответ на запрос
	Если Ответ.КодСостояния = 200 Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		
		Данные = ПрочитатьJSON(ЧтениеJSON, Ложь);
		ОбработатьДанныеРезерва(Данные);
		
		ВремяОкончания = ТекущаяДата();
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данные получены. Статус-код " + Ответ.КодСостояния);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Время выполнения: " + (ВремяОкончания - ВремяНачала) / 60 + " мин.");
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Соединение отсутствует. Статус-код " + Ответ.КодСостояния);
	КонецЕсли;
	
	Соединение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРезерв(Команда)
	ЗапроситьРезервНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеРезерва(Данные)

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(20)));
	Таблица.Колонки.Добавить("КодРО", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(9)));
	
	Для каждого Элм Из Данные Цикл
		
		нСтр = Таблица.Добавить();
		нСтр.Количество = Число(Элм.Num);
		
		СтрокаДата = СтрЗаменить(Лев(Элм.Date, 10), "-", "");
		нСтр.Дата = Формат(СтрокаДата, "ДЛФ=ДДВ");
		
		нСтр.Код = Элм.Code;
		нСтр.КодРО = Элм.CodeRO;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.Код КАК Код,
		|	Таблица.КодРО КАК КодРО,
		|	Таблица.Дата КАК Дата,
		|	Таблица.Количество КАК Количество
		|ПОМЕСТИТЬ втДанные
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанные.Код КАК Код,
		|	втДанные.КодРО КАК КодРО,
		|	втДанные.Дата КАК Дата,
		|	втДанные.Количество КАК Количество,
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Контрагенты.Ссылка КАК РО
		|ПОМЕСТИТЬ втПолученыйрезерв
		|ИЗ
		|	втДанные КАК втДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО втДанные.Код = Номенклатура.Код
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО втДанные.КодРО = Контрагенты.Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втПолученыйрезерв.Код КАК Код,
		|	втПолученыйрезерв.Дата КАК Дата,
		|	втПолученыйрезерв.Количество КАК Количество,
		|	втПолученыйрезерв.Номенклатура КАК Номенклатура,
		|	РезервРРООстатки.Номенклатура КАК Номенклатура1,
		|	РезервРРООстатки.ДатаЗаказаВРРО КАК ДатаЗаказаВРРО,
		|	РезервРРООстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	втПолученыйрезерв КАК втПолученыйрезерв
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервРРО.Остатки(, ) КАК РезервРРООстатки
		|		ПО втПолученыйрезерв.Номенклатура = РезервРРООстатки.Номенклатура
		|			И втПолученыйрезерв.Дата = РезервРРООстатки.ДатаЗаказаВРРО
		|			И втПолученыйрезерв.РО = РезервРРООстатки.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Код КАК Код,
		|	вт.Дата КАК Дата,
		|	вт.Количество КАК Количество,
		|	вт.Номенклатура КАК Номенклатура,
		|	вт.Номенклатура1 КАК Номенклатура1,
		|	вт.Номенклатура.Представление КАК НоменклатураПредставление,
		|	вт.Номенклатура1.Представление КАК Номенклатура1Представление,
		|	вт.ДатаЗаказаВРРО КАК ДатаЗаказаВРРО,
		|	вт.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	вт КАК вт
		|ГДЕ
		|	(вт.Номенклатура <> вт.Номенклатура1
		|			ИЛИ вт.Дата <> вт.ДатаЗаказаВРРО
		|			ИЛИ вт.Количество <> вт.КоличествоОстаток)";
	
	Запрос.УстановитьПараметр("Таблица", Таблица);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не совпадает: " + ВыборкаДетальныеЗаписи.НоменклатураПредставление + "<>" + ВыборкаДетальныеЗаписи.НоменклатураПредставление;
		Сообщение.Сообщить();
		
	КонецЦикла;
	
	
КонецПроцедуры
